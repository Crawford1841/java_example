<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

  <bean id="datasourcePool" abstract="true" class="com.alibaba.druid.pool.DruidDataSource"
    init-method="init" destroy-method="close">
    <property name="initialSize" value="${dbPool.initialSize}"/>
    <property name="minIdle" value="${dbPool.minIdle}"/>
    <property name="maxActive" value="${dbPool.maxActive}"/>
    <property name="maxWait" value="${dbPool.maxWait}"/>
    <property name="timeBetweenEvictionRunsMillis" value="${dbPool.timeBetweenEvictionRunsMillis}"/>
    <property name="minEvictableIdleTimeMillis" value="${dbPool.minEvictableIdleTimeMillis}"/>
    <property name="validationQuery" value="${dbPool.validationQuery}"/>
    <property name="testWhileIdle" value="${dbPool.testWhileIdle}"/>
    <property name="testOnBorrow" value="${dbPool.testOnBorrow}"/>
    <property name="testOnReturn" value="${dbPool.testOnReturn}"/>
    <property name="poolPreparedStatements" value="${dbPool.poolPreparedStatements}"/>
    <property name="maxPoolPreparedStatementPerConnectionSize"
      value="${dbPool.maxPoolPreparedStatementPerConnectionSize}"/>
    <property name="filters" value="${dbPool.filters}"/>
  </bean>

  <bean id="dataSource2023" parent="datasourcePool">
    <property name="driverClassName" value="${db2023.mysql.jdbc.driverClassName}"/>
    <property name="url" value="${db2023.mysql.jdbc.url}"/>
    <property name="username" value="${db2023.mysql.jdbc.username}"/>
    <property name="password" value="${db2023.mysql.jdbc.password}"/>
  </bean>

  <bean id="dataSource2024" parent="datasourcePool">
    <property name="driverClassName" value="${db2024.mysql.jdbc.driverClassName}"/>
    <property name="url" value="${db2024.mysql.jdbc.url}"/>
    <property name="username" value="${db2024.mysql.jdbc.username}"/>
    <property name="password" value="${db2024.mysql.jdbc.password}"/>
  </bean>

  <bean id="dataSource" parent="datasourcePool">
    <property name="driverClassName" value="${mysql.jdbc.driverClassName}"/>
    <property name="url" value="${mysql.jdbc.url}"/>
    <property name="username" value="${mysql.jdbc.username}"/>
    <property name="password" value="${mysql.jdbc.password}"/>
  </bean>


  <bean id="dynamicDataSourceEntry"
    class="javax.core.common.jdbc.datasource.DynamicDataSourceEntry"/>

  <bean id="dynamicDataSource" class="javax.core.common.jdbc.datasource.DynamicDataSource">
    <property name="dataSourceEntry" ref="dynamicDataSourceEntry"></property>
    <property name="targetDataSources">
      <map>
        <entry key="DB_2024" value-ref="dataSource2024"></entry>
        <entry key="DB_2023" value-ref="dataSource2023"></entry>
      </map>
    </property>
    <property name="defaultTargetDataSource" ref="dataSource2024"/>
  </bean>

</beans>